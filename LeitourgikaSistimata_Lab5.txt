ΑΣΚΗΣΗ 1
  ΛΥΣΗ (Έχει μια παραπάνω δυνατότητα απο αυτή που ζητάει η άσκηση, εμφανίζει τον αύξων αριθμό κάθε Οντότητας τους Συστήματος Αρχείων):
    #!/bin/bash
    #dirstat.sh
    id=1
    for i in *
    do
    #	echo -n "${id}. "
    	if [ -d $i ]; then
    		echo "${i} : is directory."
    	elif [ -f $i ]; then
    		echo "${i} : is file."
    	else
    		echo "${i}: is something else."
    	fi
    	((id++))
    done

ΑΣΚΗΣΗ 2.1
  ΛΥΣΗ:
    #!/bin/bash
    #create_test.sh
    if (test $# -eq 0) || (test $# -gt 1); then
    	echo "ERROR: Wrong number of parameters have been given." 1>&2
      exit 1
    else
    	for ((i=1; i<51; i++))
    	do
    		touch ${1}${i}
    	done
    fi
ΑΣΚΗΣΗ 2.2
  ΛΥΣΗ: Δημιουργία 100 αρχείων
    #!/bin/bash
    for ((i=1; i<101; i++))
    do
    	touch "${i}file"
    done
  ΛΥΣΗ: Διαγραφή των 100 αρχείων
    #!/bin/bash
    for ((i=1; i<101; i++))
    do
    	rm "${i}file"
    done

ΑΣΚΗΣΗ 3
  ΛΥΣΗ:
    #!/bin/bash
    echo -n "Give directory 1 name: "
    read dir1
    echo -n "Give directory 2 name: "
    read dir2
    #echo "Directory 1: ${dir1}" # ΓΙΑ ΕΛΕΓΧΟ. ΔΕΝ ΧΡΕΙΑΖΕΤΑΙ.
    #echo "Directory 2: ${dir2}" # ΓΙΑ ΕΛΕΓΧΟ. ΔΕΝ ΧΡΕΙΑΖΕΤΑΙ.
    # Check if given directories exist
    if [ ! -e $dir1 ] ; then
    	echo "Dir ${dir1} does not exist and will be created."
    	mkdir "${dir1}"
    fi
    if [ ! -e $dir2 ]; then
    	echo "Dir ${dir2} does not exist and will be created."
    	mkdir "${dir2}"
    fi
    mv [0-5]* "${dir1}/"
    mv [6-9]* "${dir2}/"
    echo -n "Total files moved in ${dir1}: "
    lines_dir1=`ls -l "${dir1}" | wc -l` # ΓΙΑ ΤΗΝ ΑΦΑΙΡΕΣΗ ΤΗΣ ΓΡΑΜΜΗΣ total x
    echo $((lines_dir1-1)) # ΓΙΑ ΤΗΝ ΑΦΑΙΡΕΣΗ ΤΗΣ ΓΡΑΜΜΗΣ total x
    echo -n "Total files moved in ${dir2}: "
    lines_dir2=`ls -l "${dir2}" | wc -l` # ΓΙΑ ΤΗΝ ΑΦΑΙΡΕΣΗ ΤΗΣ ΓΡΑΜΜΗΣ total x
    echo $((lines_dir2-1)) # ΓΙΑ ΤΗΝ ΑΦΑΙΡΕΣΗ ΤΗΣ ΓΡΑΜΜΗΣ total x

ΑΣΚΗΣΗ 4
  ΛΥΣΗ 1: Αρχική έκδση.
    #!/bin/bash
    if (($# != 1)); then
    	echo "ERROR: Wrong number of parameters have been given." 1>&2
    	exit 1
    else
    	if [ -e $1 ]; then
    		echo "${1} FOUND IN CURRENT DIRECTORY"
    		found=0
    	else
    	#		echo "ERROR: File not found in current directory." 1>&2
    		tmp_exitcode=1
    	fi	
    	for i in *;
    	do
    		if [ -d $i ]; then
    			if [ -e ./$i/$1 ]; then
    				echo "${1} FOUND IN DIRECTORY ./${i}"
    				found=0
    			fi
    		fi
    	done
    fi

  ΛΥΣΗ 2: Βελτιωμένη έκδση. Επιστρέφει και errorcodes αν και δεν τα ζηταέι η άσκηση.
    #!/bin/bash
    tmp_exitcode=0
    found=1
    if (($# != 1)); then
    	echo "ERROR: Wrong number of parameters have been given." 1>&2
    	exit 1
    else
    	if [[ -e $1 ]]; then
    		echo "${1} FOUND IN CURRENT DIRECTORY"
    		found=0
    	else
    	#		echo "ERROR: File not found in current directory." 1>&2
    		tmp_exitcode=1
    	fi	
    	for i in *;
    	do
    		if [[ -d $i ]]; then
    			if [[ -e ./$i/$1 ]]; then
    				echo "${1} FOUND IN DIRECTORY ./${i}"
    				found=0
    			fi
    		fi
    	done
    fi
    if (($found == 0)); then
    	tmp_exitcode=0
    else
    	echo "ERROR: No file found." 1>&2
    	tmp_exitcode=2
    fi
    exit ${tmp_exitcode}

ΑΣΚΗΣΗ 5
  ΛΥΣΗ: UNDER CONSTRUCTION
    #!/bin/bash
    #lab5 - askisi5
    tmp_exitcode=0
    found=1
    if (test $# -ne 2); then
    	echo "ERROR: Wrong number of parameters have been given." 1>&2
    	exit 1
    else
    	if [ -d $1 ]; then
    	    ls -l "${1}"/*."${2}" | egrep --color '^-r'
    #	    result=`ls -l "${1}"/*."${2}"`
    	    if [ "${?}" -ne 0 ]; then
    		    found=2
    		fi
    #        else
    #            echo "${result}"
    #            ls -l "${1}"/*."${2}" | egrep --color '^-r'
    #	    fi
    #		echo "${1} FOUND IN CURRENT DIRECTORY"
    	else
    		echo "ERROR: First paramater is not directory." 1>&2
            exit 2
    	fi	
    #	for i in *;
    #	do
    #		if test -d $i; then
    #			if test -e ./$i/$1; then
    #				echo "${1} FOUND IN DIRECTORY ./${i}"
    #				found=0
    #			fi
    #		fi
    #	done
    fi
    if [ $found -eq 0 ]; then
    	tmp_exitcode=0
    else
    	echo "ERROR: No files found." 1>&2
    	tmp_exitcode=2
    fi
    exit ${tmp_exitcode}

ΑΣΚΗΣΗ 6
ΑΣΚΗΣΗ 7
ΑΣΚΗΣΗ 8
ΑΣΚΗΣΗ 9
ΑΣΚΗΣΗ 10
  ΛΥΣΗ (Θέλει βελτίωση ωστε να ελέγχει αν έχει δοθεί παράμετρος):
    #!/bin/bash
    cat $1 | tr [:lower:] [:upper:]

ΑΣΚΗΣΗ 11
ΑΣΚΗΣΗ 12
ΑΣΚΗΣΗ 13
ΑΣΚΗΣΗ 14
ΑΣΚΗΣΗ 15
